'use strict';

module.exports = {
  up: async (queryInterface, Sequelize) => {
    await queryInterface.createTable('FollowUps', {
      id: {
        allowNull: false,
        autoIncrement: true,
        primaryKey: true,
        type: Sequelize.INTEGER
      },
      leadId: {
        type: Sequelize.INTEGER,
        allowNull: true,
        references: {
          model: 'Leads',
          key: 'id'
        },
        onUpdate: 'CASCADE',
        onDelete: 'SET NULL',
        field: 'lead_id'
      },
      clientId: {
        type: Sequelize.INTEGER,
        allowNull: true,
        references: {
          model: 'Clients',
          key: 'id'
        },
        onUpdate: 'CASCADE',
        onDelete: 'SET NULL',
        field: 'client_id'
      },
      saleId: {
        type: Sequelize.INTEGER,
        allowNull: true,
        references: {
          model: 'Sales',
          key: 'id'
        },
        onUpdate: 'CASCADE',
        onDelete: 'SET NULL',
        field: 'sale_id'
      },
      type: {
        type: Sequelize.STRING(50),
        allowNull: false,
        defaultValue: 'call'
      },
      status: {
        type: Sequelize.STRING(30),
        allowNull: false,
        defaultValue: 'scheduled'
      },
      priority: {
        type: Sequelize.STRING(20),
        allowNull: false,
        defaultValue: 'medium'
      },
      title: {
        type: Sequelize.STRING(200),
        allowNull: false
      },
      description: {
        type: Sequelize.TEXT,
        allowNull: true
      },
      notes: {
        type: Sequelize.TEXT,
        allowNull: true
      },
      scheduledDate: {
        type: Sequelize.DATE,
        allowNull: false,
        field: 'scheduled_date'
      },
      completedDate: {
        type: Sequelize.DATE,
        allowNull: true,
        field: 'completed_date'
      },
      assignedTo: {
        type: Sequelize.INTEGER,
        allowNull: true,
        references: {
          model: 'Users',
          key: 'id'
        },
        onUpdate: 'CASCADE',
        onDelete: 'SET NULL',
        field: 'assigned_to'
      },
      createdBy: {
        type: Sequelize.INTEGER,
        allowNull: true,
        references: {
          model: 'Users',
          key: 'id'
        },
        onUpdate: 'CASCADE',
        onDelete: 'SET NULL',
        field: 'created_by'
      },
      contactMethod: {
        type: Sequelize.STRING(50),
        allowNull: true,
        field: 'contact_method'
      },
      expectedOutcome: {
        type: Sequelize.TEXT,
        allowNull: true,
        field: 'expected_outcome'
      },
      actualOutcome: {
        type: Sequelize.TEXT,
        allowNull: true,
        field: 'actual_outcome'
      },
      nextAction: {
        type: Sequelize.TEXT,
        allowNull: true,
        field: 'next_action'
      },
      isAutoGenerated: {
        type: Sequelize.BOOLEAN,
        allowNull: false,
        defaultValue: false,
        field: 'is_auto_generated'
      },
      createdAt: {
        allowNull: false,
        type: Sequelize.DATE,
        defaultValue: Sequelize.literal('CURRENT_TIMESTAMP'),
        field: 'created_at'
      },
      updatedAt: {
        allowNull: false,
        type: Sequelize.DATE,
        defaultValue: Sequelize.literal('CURRENT_TIMESTAMP'),
        field: 'updated_at'
      },
      deletedAt: {
        type: Sequelize.DATE,
        allowNull: true,
        field: 'deleted_at'
      }
    });

    // إضافة indexes للبحث السريع
    await queryInterface.addIndex('FollowUps', ['scheduled_date']);
    await queryInterface.addIndex('FollowUps', ['status']);
    await queryInterface.addIndex('FollowUps', ['assigned_to']);
    await queryInterface.addIndex('FollowUps', ['type']);
    await queryInterface.addIndex('FollowUps', ['is_auto_generated']);
  },

  down: async (queryInterface, Sequelize) => {
    await queryInterface.dropTable('FollowUps');
  }
};
        type: Sequelize.DATE,

        allowNull: true,

        field: 'completed_date'

      },

      assignedTo: {

        type: Sequelize.INTEGER,

        allowNull: true,

        references: {

          model: 'Users',

          key: 'id'

        },

        onUpdate: 'CASCADE',

        onDelete: 'SET NULL',

        field: 'assigned_to'

      },

      createdBy: {

        type: Sequelize.INTEGER,

        allowNull: true,

        references: {

          model: 'Users',

          key: 'id'

        },

        onUpdate: 'CASCADE',

        onDelete: 'SET NULL',

        field: 'created_by'

      },

      contactMethod: {

        type: Sequelize.STRING(50),

        allowNull: true,

        field: 'contact_method'

      },

      expectedOutcome: {

        type: Sequelize.TEXT,

        allowNull: true,

        field: 'expected_outcome'

      },

      actualOutcome: {

        type: Sequelize.TEXT,

        allowNull: true,

        field: 'actual_outcome'

      },

      nextAction: {

        type: Sequelize.TEXT,

        allowNull: true,

        field: 'next_action'

      },

      createdAt: {

        allowNull: false,

        type: Sequelize.DATE,

        defaultValue: Sequelize.literal('CURRENT_TIMESTAMP'),

        field: 'created_at'

      },

      updatedAt: {

        allowNull: false,

        type: Sequelize.DATE,

        defaultValue: Sequelize.literal('CURRENT_TIMESTAMP'),

        field: 'updated_at'

      },

      deletedAt: {

        type: Sequelize.DATE,

        allowNull: true,

        field: 'deleted_at'

      }

    });



    // إضافة indexes للبحث السريع

    await queryInterface.addIndex('FollowUps', ['scheduled_date']);

    await queryInterface.addIndex('FollowUps', ['status']);

    await queryInterface.addIndex('FollowUps', ['assigned_to']);

    await queryInterface.addIndex('FollowUps', ['type']);

  },



  down: async (queryInterface, Sequelize) => {

    await queryInterface.dropTable('FollowUps');

  }

};


        type: Sequelize.DATE,

        allowNull: true,

        field: 'completed_date'

      },

      assignedTo: {

        type: Sequelize.INTEGER,

        allowNull: true,

        references: {

          model: 'Users',

          key: 'id'

        },

        onUpdate: 'CASCADE',

        onDelete: 'SET NULL',

        field: 'assigned_to'

      },

      createdBy: {

        type: Sequelize.INTEGER,

        allowNull: true,

        references: {

          model: 'Users',

          key: 'id'

        },

        onUpdate: 'CASCADE',

        onDelete: 'SET NULL',

        field: 'created_by'

      },

      contactMethod: {

        type: Sequelize.STRING(50),

        allowNull: true,

        field: 'contact_method'

      },

      expectedOutcome: {

        type: Sequelize.TEXT,

        allowNull: true,

        field: 'expected_outcome'

      },

      actualOutcome: {

        type: Sequelize.TEXT,

        allowNull: true,

        field: 'actual_outcome'

      },

      nextAction: {

        type: Sequelize.TEXT,

        allowNull: true,

        field: 'next_action'

      },

      createdAt: {

        allowNull: false,

        type: Sequelize.DATE,

        defaultValue: Sequelize.literal('CURRENT_TIMESTAMP'),

        field: 'created_at'

      },

      updatedAt: {

        allowNull: false,

        type: Sequelize.DATE,

        defaultValue: Sequelize.literal('CURRENT_TIMESTAMP'),

        field: 'updated_at'

      },

      deletedAt: {

        type: Sequelize.DATE,

        allowNull: true,

        field: 'deleted_at'

      }

    });



    // إضافة indexes للبحث السريع

    await queryInterface.addIndex('FollowUps', ['scheduled_date']);

    await queryInterface.addIndex('FollowUps', ['status']);

    await queryInterface.addIndex('FollowUps', ['assigned_to']);

    await queryInterface.addIndex('FollowUps', ['type']);

  },



  down: async (queryInterface, Sequelize) => {

    await queryInterface.dropTable('FollowUps');

  }

};
        type: Sequelize.DATE,

        allowNull: true,

        field: 'completed_date'

      },

      assignedTo: {

        type: Sequelize.INTEGER,

        allowNull: true,

        references: {

          model: 'Users',

          key: 'id'

        },

        onUpdate: 'CASCADE',

        onDelete: 'SET NULL',

        field: 'assigned_to'

      },

      createdBy: {

        type: Sequelize.INTEGER,

        allowNull: true,

        references: {

          model: 'Users',

          key: 'id'

        },

        onUpdate: 'CASCADE',

        onDelete: 'SET NULL',

        field: 'created_by'

      },

      contactMethod: {

        type: Sequelize.STRING(50),

        allowNull: true,

        field: 'contact_method'

      },

      expectedOutcome: {

        type: Sequelize.TEXT,

        allowNull: true,

        field: 'expected_outcome'

      },

      actualOutcome: {

        type: Sequelize.TEXT,

        allowNull: true,

        field: 'actual_outcome'

      },

      nextAction: {

        type: Sequelize.TEXT,

        allowNull: true,

        field: 'next_action'

      },

      createdAt: {

        allowNull: false,

        type: Sequelize.DATE,

        defaultValue: Sequelize.literal('CURRENT_TIMESTAMP'),

        field: 'created_at'

      },

      updatedAt: {

        allowNull: false,

        type: Sequelize.DATE,

        defaultValue: Sequelize.literal('CURRENT_TIMESTAMP'),

        field: 'updated_at'

      },

      deletedAt: {

        type: Sequelize.DATE,

        allowNull: true,

        field: 'deleted_at'

      }

    });



    // إضافة indexes للبحث السريع

    await queryInterface.addIndex('FollowUps', ['scheduled_date']);

    await queryInterface.addIndex('FollowUps', ['status']);

    await queryInterface.addIndex('FollowUps', ['assigned_to']);

    await queryInterface.addIndex('FollowUps', ['type']);

  },



  down: async (queryInterface, Sequelize) => {

    await queryInterface.dropTable('FollowUps');

  }

};


        type: Sequelize.DATE,

        allowNull: true,

        field: 'completed_date'

      },

      assignedTo: {

        type: Sequelize.INTEGER,

        allowNull: true,

        references: {

          model: 'Users',

          key: 'id'

        },

        onUpdate: 'CASCADE',

        onDelete: 'SET NULL',

        field: 'assigned_to'

      },

      createdBy: {

        type: Sequelize.INTEGER,

        allowNull: true,

        references: {

          model: 'Users',

          key: 'id'

        },

        onUpdate: 'CASCADE',

        onDelete: 'SET NULL',

        field: 'created_by'

      },

      contactMethod: {

        type: Sequelize.STRING(50),

        allowNull: true,

        field: 'contact_method'

      },

      expectedOutcome: {

        type: Sequelize.TEXT,

        allowNull: true,

        field: 'expected_outcome'

      },

      actualOutcome: {

        type: Sequelize.TEXT,

        allowNull: true,

        field: 'actual_outcome'

      },

      nextAction: {

        type: Sequelize.TEXT,

        allowNull: true,

        field: 'next_action'

      },

      createdAt: {

        allowNull: false,

        type: Sequelize.DATE,

        defaultValue: Sequelize.literal('CURRENT_TIMESTAMP'),

        field: 'created_at'

      },

      updatedAt: {

        allowNull: false,

        type: Sequelize.DATE,

        defaultValue: Sequelize.literal('CURRENT_TIMESTAMP'),

        field: 'updated_at'

      },

      deletedAt: {

        type: Sequelize.DATE,

        allowNull: true,

        field: 'deleted_at'

      }

    });



    // إضافة indexes للبحث السريع

    await queryInterface.addIndex('FollowUps', ['scheduled_date']);

    await queryInterface.addIndex('FollowUps', ['status']);

    await queryInterface.addIndex('FollowUps', ['assigned_to']);

    await queryInterface.addIndex('FollowUps', ['type']);

  },



  down: async (queryInterface, Sequelize) => {

    await queryInterface.dropTable('FollowUps');

  }

};



        allowNull: true,

        field: 'completed_date'

      },

      assignedTo: {

        type: Sequelize.INTEGER,

        allowNull: true,

        references: {

          model: 'Users',

          key: 'id'

        },

        onUpdate: 'CASCADE',

        onDelete: 'SET NULL',

        field: 'assigned_to'

      },

      createdBy: {

        type: Sequelize.INTEGER,

        allowNull: true,

        references: {

          model: 'Users',

          key: 'id'

        },

        onUpdate: 'CASCADE',

        onDelete: 'SET NULL',

        field: 'created_by'

      },

      contactMethod: {

        type: Sequelize.STRING(50),

        allowNull: true,

        field: 'contact_method'

      },

      expectedOutcome: {

        type: Sequelize.TEXT,

        allowNull: true,

        field: 'expected_outcome'

      },

      actualOutcome: {

        type: Sequelize.TEXT,

        allowNull: true,

        field: 'actual_outcome'

      },

      nextAction: {

        type: Sequelize.TEXT,

        allowNull: true,

        field: 'next_action'

      },

      createdAt: {

        allowNull: false,

        type: Sequelize.DATE,

        defaultValue: Sequelize.literal('CURRENT_TIMESTAMP'),

        field: 'created_at'

      },

      updatedAt: {

        allowNull: false,

        type: Sequelize.DATE,

        defaultValue: Sequelize.literal('CURRENT_TIMESTAMP'),

        field: 'updated_at'

      },

      deletedAt: {

        type: Sequelize.DATE,

        allowNull: true,

        field: 'deleted_at'

      }

    });



    // إضافة indexes للبحث السريع

    await queryInterface.addIndex('FollowUps', ['scheduled_date']);

    await queryInterface.addIndex('FollowUps', ['status']);

    await queryInterface.addIndex('FollowUps', ['assigned_to']);

    await queryInterface.addIndex('FollowUps', ['type']);

  },



  down: async (queryInterface, Sequelize) => {

    await queryInterface.dropTable('FollowUps');

  }

};


